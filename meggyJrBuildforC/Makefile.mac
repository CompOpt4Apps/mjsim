#######################
# Makefile.mac
#
# This makefile will generate a .hex file from a .cpp file
# and upload it to the MeggyJr when the commands 
#   make --file Makefile.mac file.hex
# and
#   make --file Makefile.mac file.install
# are run on a typical Mac with the Arduino version 0018 tools installed.
#
# You can find the Arduino environment at http://arduino.cc/en/Main/Software.
#
# 12/15/10, Michelle Strout
#######################


## bin directory for avr-gcc
AVRDIR =        /Applications/3rd\ Party/Arduino.app/Contents/Resources/Java/hardware/tools/avr/bin

## avrdude configuration file
CONFIG_FILE =    /Applications/3rd\ Party/Arduino.app/Contents/Resources/Java/hardware/tools/avr/etc/avrdude.conf

## usb device for download to Meggy
USB_DEVICE =    /dev/tty.usbserial-FTEST4DK

## avr chip
MCU =           atmega328p

## avr compiler
CC =            $(AVRDIR)/avr-gcc

## Options common to compile, link and assembly rules
COMMON =        -mmcu=$(MCU)

## Compile options common for all C compilation units.
CFLAGS =        $(COMMON)
CFLAGS +=       -Wall -Os -fsigned-char
CFLAGS +=       -MD -MP -MT $(*F).o -MF dep/$(@F).d 
CFLAGS +=       -DF_CPU=16000000UL

## Assembly specific flags
ASMFLAGS =      $(COMMON)
ASMFLAGS +=     -x assembler-with-cpp -Wa,-gdwarf2

## Linker flags
LDFLAGS =       $(COMMON)
LDFLAGS += 

## Intel Hex file production flags
HEX_FLASH_FLAGS = -R .eeprom
HEX_EEPROM_FLAGS = -j .eeprom
HEX_EEPROM_FLAGS += --set-section-flags=.eeprom="alloc,load"
HEX_EEPROM_FLAGS += --change-section-lma .eeprom=0

## Compile and Build

%.hex: %.cpp MeggyJr.o
	$(CC) $(INCLUDES) $(CFLAGS) -S  $<
	$(CC) $(INCLUDES) $(CFLAGS) -c  $*.s
	$(CC) $(LDFLAGS) $*.o MeggyJr.o $(LINKONLYOBJECTS) $(LIBDIRS) $(LIBS) -o $*.elf
	avr-objcopy -O ihex $(HEX_FLASH_FLAGS)  $*.elf $@

MeggyJr.o: MeggyJr.cpp
	$(CC) $(INCLUDES) $(CFLAGS) -c  $<


## Install on the device
%.install: %.hex
	$(AVRDIR)/avrdude -patmega328p -cstk500v1 -b57600 -v -U flash:w:$<:i -V -v -C$(CONFIG_FILE) -P$(USB_DEVICE)


## Clean target
.PHONY: clean
clean:
	-rm -rf $(OBJECTS) $(ELFTARGET) $(HEXTARGET) dep/* dep .DS_Store *.s *.o *.hex *.elf

## Other dependencies, this is actually needed for the Mac compile
-include $(shell mkdir dep 2>/dev/null) $(wildcard dep/*)

