==========
MJSIM 1.0

Copyright ((c)) 2011, Colorado State University
All rights reserved.
==========

MJSim is an Atmel AVR simulator and MeggyJr emulator that was developed for use
in an introduction to compilers course at Colorado State University,
http://www.cs.colostate.edu/~cs453. MJSim can be used in batch mode to enable
grading or be used in GUI mode where one can step through the AVR instructions,
set break points, visualize the stack, heap, registers, and condition codes,
and visualize the MeggyJr as calls to a slightly modified version of the
MeggyJr simple run-time library are made.

---------------------
Quick start for users
---------------------
    
    0) Download and untar MJSIM-1.0.tar.
        tar xf mjsim-1.0.tar

    1) Build the jar file, MJSIM.jar.
        cd mjsim-1.0/
        make

    2) Run the regression tests to see an example of using MJSIM.jar.
        cd RegressionTesting/
        ./regress.sh


---------------------
Command Line Options
---------------------
java -jar ../MJSIM.jar --help
usage: AVRSim
 -b,--batch        run in batch mode
 -f,--file <arg>   initial AVR assembly file to read in
 -h,--help         print usage info
 -i,--instrcount   print out dynamic count of load and store instructions
 -j <arg>          number of jumps allowed on a label
 -t                trace logging output (only use for debugging)
 -v                verbose logging output


-----------------------
Overview for developers
-----------------------

-----------------------
Contributing changes
-----------------------
We are open to changes that people would like to contribute.  Since MJSIM is
being used to grade in a class setting, it is crucial that any new features
do not break the regression tests in the RegressionTesting subdirectory.
If you can demonstrate that those tests still work and you provide us a
test of your own, then any useful changes will be accepted.  See the
list of issues for possible contributions.

-------
Credits
-------

Ryan Moore wrote MJSIM for his honors thesis and developed
the GUI for visualizing the stack and heap, setting break points,
and stepping through the code.

Michelle Strout added the arg_opts functionality and any additional
instructions or run-time library function calls needed to support
the MeggyJava compilers developed for CS 453.

Cassandra Helms developed the MeggyJr emulator and incorporated it
into the MJSIM GUI.

Michael Miller developed the lexer and parser for MJSIM and added
some instructions like icall.

